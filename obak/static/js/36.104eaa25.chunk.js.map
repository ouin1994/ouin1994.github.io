{"version":3,"sources":["scripts/views/linkMan/postArt/index.js","scripts/mobx/link.js"],"names":["postArt","connect","state","pic","getIn","observer","editorState","BraftEditor","createEditorState","goBack","props","history","push","LinkMan","resetArticleList","setState","handleChangeText","console","log","toHTML","htmlString","changeContent","handleChangeTitle","e","target","value","title","changeTitle","handleSubmit","articleList","submitArticle","url","data","admin","sessionStorage","mobile","changeAdmin","avatar","this","changeAvatar","gutter","span","extra","onClick","style","color","addonBefore","placeholder","onChange","marginTop","controls","display","flexDirection","type","marginRight","Component","DateFormat","str","date","Date","year","getFullYear","month","getMonth","day","getDate","observable","action","a","axios","post","res","result","map","item","i","time","artList","mineArt","content"],"mappings":"8PAcMA,EARLC,aACG,SAAAC,GACI,MAAO,CACHC,IAAKD,EAAME,MAAM,CAAC,SAAU,W,GAIvCC,Y,8MAEGH,MAAQ,CACJI,YAAaC,IAAYC,kBAAkB,O,EAE/CC,OAAS,WACL,EAAKC,MAAMC,QAAQC,KAAK,oBACxBC,IAAQC,mBACR,EAAKC,SAAS,CACVT,YAAa,Q,EAIrBU,iBAAmB,SAACV,GAChBW,QAAQC,IAAIZ,EAAYa,UACxB,IAAMC,EAAad,EAAYa,SAC/B,EAAKJ,SAAS,CAAET,YAAac,IAC7BP,IAAQQ,cAAcD,I,EAG1BE,kBAAoB,SAACC,GACjBN,QAAQC,IAAIK,EAAEC,OAAOC,OACrB,IAAIC,EAAQH,EAAEC,OAAOC,MACrBZ,IAAQc,YAAYD,I,EAExBE,aAAe,WACXX,QAAQC,IAAIL,IAAQgB,aACpBhB,IAAQiB,cAAc,CAClBC,IAAK,mBACLC,KAAMnB,IAAQgB,cAElB,EAAKpB,U,kEAGL,IAAIwB,EAAQC,eAAeC,OAC3BtB,IAAQuB,YAAYH,GACpB,IAAII,EAASC,KAAK5B,MAAMP,IACxBU,IAAQ0B,aAAaF,K,+BAEf,IAEF/B,EACAgC,KAAKpC,MADLI,YAEIuB,EAAgBhB,IAAhBgB,YAWR,OACI,6BACI,kBAAC,IAAD,CAAKW,OAAQ,IACT,kBAAC,IAAD,CAAKC,KAAM,IACP,kBAAC,IAAD,CACIf,MAAM,2BACNgB,MAAO,0BAAMC,QAASL,KAAK7B,OAAQmC,MAAO,CAAEC,MAAO,YAA5C,iBAEP,kBAAC,IAAD,CAAKL,OAAQ,IACT,kBAAC,IAAD,CAAKC,KAAM,IACP,kBAAC,IAAD,CACIhB,MAAOI,EAAYH,MACnBoB,YAAY,qBACZC,YAAY,iCACZC,SAAUV,KAAKhB,sBAI3B,kBAAC,IAAD,CAAKkB,OAAQ,GAAII,MAAO,CAAEK,UAAW,KACjC,kBAAC,IAAD,CAAKR,KAAM,IACP,kBAAC,IAAD,CACIhB,MAAOnB,EACP4C,SAhCf,CACb,OAAQ,OAAQ,YAChB,YAAa,cAAe,iBAAkB,YAC9C,aAAc,OAAQ,SAAU,YAAa,iBAAkB,YAC/D,cAAe,YAAa,gBAAiB,QAAS,YAAa,cAAe,aAAc,YAChG,WAAY,UAAW,UAAW,aAAc,OAAQ,YACxD,OAAQ,YAAa,KAAM,YAC3B,QAAS,YACT,SAyB4BF,SAAUV,KAAKtB,qBAI3B,kBAAC,IAAD,CAAKwB,OAAQ,GAAII,MAAO,CAAEK,UAAW,KACjC,kBAAC,IAAD,CAAKR,KAAM,IACP,yBAAKG,MAAO,CAAEO,QAAS,OAAQC,cAAe,gBAC1C,kBAAC,IAAD,CAAQC,KAAK,SAASV,QAASL,KAAK7B,QAApC,gBACA,kBAAC,IAAD,CAAQ4C,KAAK,UAAUV,QAASL,KAAKV,aAAcgB,MAAO,CAAEU,YAAa,KAAzE,2B,GApFlBC,e,MAgGPvD,a,6IC5Gf,SAASwD,EAAWC,GAChB,IAAIC,EAAO,IAAIC,KAAKF,GAChBG,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAa,EAC9BD,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,EACnC,IAAIE,EAAMN,EAAKO,UAGf,OAFAD,EAAMA,EAAM,GAAK,IAAMA,EAAMA,EACpB,UAAMJ,EAAN,YAAcE,EAAd,YAAuBE,G,IAG9BnD,G,0fACDqD,K,wEAAyB,M,qCACzBA,K,wEAAqB,M,qCACrBA,K,wEAAqB,M,wCAErBC,K,2HAAoB,+BAAAC,EAAA,6DAASrC,EAAT,EAASA,IAAT,SACDsC,IAAMC,KAAKvC,GADV,QACbwC,EADa,QAEbvC,KAAKwC,OAAOC,KAAI,SAACC,EAAMC,GAEvB,OADAD,EAAKE,KAAOpB,EAAWkB,EAAKE,MACrBF,KAEX,EAAKG,QAAUN,EAAIvC,KAAKwC,OANP,2C,iGASpBL,K,2HAAoB,iCAAAC,EAAA,6DAASrC,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,SACDqC,IAAMC,KAAKvC,EAAKC,GADf,QACbuC,EADa,QAEbvC,KAAKwC,OAAOC,KAAI,SAACC,EAAMC,GAEvB,OADAD,EAAKE,KAAOpB,EAAWkB,EAAKE,MACrBF,KAEX,EAAKI,QAAUP,EAAIvC,KAAKwC,OANP,2C,kGASpBL,K,oFAAqB,SAAClC,GACnB,EAAKJ,YAAL,MAA4BI,M,0CAE/BkC,K,oFAAsB,SAAC9B,GACpB,EAAKR,YAAL,OAA6BQ,M,yCAGhC8B,K,oFAAqB,SAACzC,GACnB,EAAKG,YAAL,MAA4BH,M,2CAG/ByC,K,oFAAuB,SAACY,GACrB,EAAKlD,YAAL,QAA8BkD,M,2CAGjCZ,K,gHAAuB,+BAAAC,EAAA,6DAASrC,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,SACJqC,IAAMC,KAAKvC,EAAKC,GADZ,yD,uGAKvBmC,K,oFAA0B,WACvB,EAAKtC,YAAc,O,GAKZ,QAAIhB","file":"static/js/36.104eaa25.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Input, Button } from 'antd';\r\nimport BraftEditor from 'braft-editor';\r\nimport { observer } from \"mobx-react\";\r\nimport LinkMan from \"~/mobx/link\";\r\nimport { connect } from \"react-redux\";\r\n@connect(\r\n    state=>{\r\n        return {\r\n            pic: state.getIn([\"avatar\", \"pic\"])\r\n        }\r\n    }\r\n)\r\n@observer\r\nclass postArt extends Component {\r\n    state = {\r\n        editorState: BraftEditor.createEditorState(null)\r\n    }\r\n    goBack = () => {\r\n        this.props.history.push(\"/destiny/linkman\")\r\n        LinkMan.resetArticleList()\r\n        this.setState({\r\n            editorState: null\r\n        })\r\n    }\r\n\r\n    handleChangeText = (editorState) => {\r\n        console.log(editorState.toHTML())\r\n        const htmlString = editorState.toHTML()\r\n        this.setState({ editorState: htmlString })\r\n        LinkMan.changeContent(htmlString)\r\n\r\n    }\r\n    handleChangeTitle = (e) => {\r\n        console.log(e.target.value)\r\n        let title = e.target.value\r\n        LinkMan.changeTitle(title)\r\n    }\r\n    handleSubmit = () => {\r\n        console.log(LinkMan.articleList)\r\n        LinkMan.submitArticle({\r\n            url: \"/react/upArticle\",\r\n            data: LinkMan.articleList\r\n        })\r\n        this.goBack()\r\n    }\r\n    componentDidMount() {\r\n        let admin = sessionStorage.mobile;\r\n        LinkMan.changeAdmin(admin)\r\n        let avatar = this.props.pic\r\n        LinkMan.changeAvatar(avatar)\r\n    }\r\n    render() {\r\n        const {\r\n            editorState\r\n        } = this.state\r\n        const { articleList } = LinkMan\r\n        const controls = [\r\n            'undo', 'redo', 'separator',\r\n            'font-size', 'line-height', 'letter-spacing', 'separator',\r\n            'text-color', 'bold', 'italic', 'underline', 'strike-through', 'separator',\r\n            'superscript', 'subscript', 'remove-styles', 'emoji', 'separator', 'text-indent', 'text-align', 'separator',\r\n            'headings', 'list-ul', 'list-ol', 'blockquote', 'code', 'separator',\r\n            'link', 'separator', 'hr', 'separator',\r\n            'media', 'separator',\r\n            'clear'\r\n        ]\r\n        return (\r\n            <div>\r\n                <Row gutter={24}>\r\n                    <Col span={24}>\r\n                        <Card\r\n                            title=\"发表帖子\"\r\n                            extra={<span onClick={this.goBack} style={{ color: \"#0099cc\" }}>返回</span>}\r\n                        >\r\n                            <Row gutter={12}>\r\n                                <Col span={12}>\r\n                                    <Input\r\n                                        value={articleList.title}\r\n                                        addonBefore=\"标题：\"\r\n                                        placeholder=\"请输入标题\"\r\n                                        onChange={this.handleChangeTitle}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={24} style={{ marginTop: 10 }}>\r\n                                <Col span={24}>\r\n                                    <BraftEditor\r\n                                        value={editorState}\r\n                                        controls={controls}\r\n                                        onChange={this.handleChangeText}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter={24} style={{ marginTop: 10 }}>\r\n                                <Col span={24}>\r\n                                    <div style={{ display: \"flex\", flexDirection: \"row-reverse\", }}>\r\n                                        <Button type=\"danger\" onClick={this.goBack}>取消</Button>\r\n                                        <Button type=\"primary\" onClick={this.handleSubmit} style={{ marginRight: 10 }}>确定</Button>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default postArt;","import { observable, action, computed } from \"mobx\";\r\nimport { axios } from \"&\";\r\nfunction DateFormat(str) {\r\n    let date = new Date(str)\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    month = month < 10 ? \"0\" + month : month\r\n    let day = date.getDate()\r\n    day = day < 10 ? \"0\" + day : day\r\n    let today = `${year}-${month}-${day}`;\r\n    return today\r\n}\r\nclass LinkMan {\r\n    @observable articleList = {}\r\n    @observable mineArt = []\r\n    @observable artList = []\r\n\r\n    @action getArtList = async ({ url }) => {\r\n        let res = await axios.post(url)\r\n        res.data.result.map((item, i) => {\r\n            item.time = DateFormat(item.time)\r\n            return item\r\n        })\r\n        this.artList = res.data.result\r\n    }\r\n\r\n    @action getMineArt = async ({ url, data }) => {\r\n        let res = await axios.post(url, data)\r\n        res.data.result.map((item, i) => {\r\n            item.time = DateFormat(item.time)\r\n            return item\r\n        })\r\n        this.mineArt = res.data.result\r\n    }\r\n\r\n    @action changeAdmin = (admin) => {\r\n        this.articleList[\"admin\"] = admin\r\n    }\r\n    @action changeAvatar = (avatar) => {\r\n        this.articleList[\"avatar\"] = avatar\r\n    }\r\n\r\n    @action changeTitle = (title) => {\r\n        this.articleList[\"title\"] = title\r\n    }\r\n\r\n    @action changeContent = (content) => {\r\n        this.articleList[\"content\"] = content\r\n    }\r\n\r\n    @action submitArticle = async ({ url, data }) => {\r\n        let res = await axios.post(url, data)\r\n\r\n    }\r\n\r\n    @action resetArticleList = () => {\r\n        this.articleList = {}\r\n    }\r\n}\r\n\r\n\r\nexport default new LinkMan()\r\n\r\n"],"sourceRoot":""}