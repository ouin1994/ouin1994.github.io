{"version":3,"sources":["../node_modules/_rc-util@4.18.1@rc-util/lib/warning.js","../node_modules/_is-mobile@2.1.0@is-mobile/index.js","../node_modules/_rc-resize-observer@0.1.3@rc-resize-observer/es/index.js","../node_modules/_rc-util@4.18.1@rc-util/lib/Dom/findDOMNode.js","../node_modules/_rc-util@4.18.1@rc-util/lib/ref.js","../node_modules/_rc-resize-observer@0.1.3@rc-resize-observer/es/util.js","../input/ClearableLabeledInput.jsx","../input/Input.jsx","../input/Group.jsx","../input/Search.jsx","../input/calculateNodeHeight.jsx","../input/ResizableTextArea.jsx","../input/TextArea.jsx","../input/Password.jsx","../input/index.jsx"],"names":["Object","defineProperty","exports","value","warning","note","resetWarned","warned","call","warningOnce","noteOnce","valid","message","default","process","method","_default","module","isMobile","mobileRE","tabletRE","opts","ua","navigator","userAgent","headers","tablet","test","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","__importStar","this","mod","__esModule","result","k","hasOwnProperty","__importDefault","React","require","findDOMNode_1","toArray_1","warning_1","ref_1","resize_observer_polyfill_1","util_1","ReactResizeObserver","_React$Component","_this","instance","Constructor","TypeError","_classCallCheck","apply","arguments","resizeObserver","childNode","currentElement","state","width","height","onResize","entries","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","setState","setChildNode","node","protoProps","staticProps","subClass","superClass","create","_inherits","onComponentUpdated","destroyObserver","disabled","element","observe","disconnect","children","childNodes","isValidElement","supportRef","ref","cloneElement","composeRef","map","index","concat","Component","displayName","HTMLElement","_reactDom","findDOMNode","fillRef","current","_len","refs","Array","_key","forEach","nodeOrComponent","type","render","ClearableInputType","tuple","hasPrefixSuffix","ClearableLabeledInput","prefixCls","allowClear","inputType","handleReset","className","theme","onClick","role","suffix","renderClearIcon","renderSuffix","prefix","affixWrapperCls","classNames","style","getInputClassName","labeledElement","addonBefore","addonAfter","wrapperClassName","addonClassName","addonBeforeNode","addonAfterNode","mergedWrapperClassName","mergedGroupClassName","renderTextAreaWithClearIcon","renderInputWithLabel","renderLabeledIcon","polyfill","InputSizes","fixControlledValue","resolveOnChange","e","onChange","event","originalInputValue","Input","otherProps","omit","onKeyDown","saveInput","onPressEnter","getPrefixCls","saveClearableInput","nextProps","prevProps","input","document","callback","PropTypes","id","maxLength","defaultValue","onKeyUp","onFocus","onBlur","customizePrefixCls","cls","onMouseEnter","onMouseLeave","__rest","s","t","Search","onSearch","loading","enterButton","icon","btnClassName","enterButtonAsElement","isAntdButton","button","_a","customizeInputPrefixCls","restProps","inputPrefixCls","inputClassName","HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","calculateNodeHeight","uiTextNode","useCache","minRows","maxRows","hiddenTextarea","nodeRef","window","boxSizing","paddingSize","parseFloat","borderSize","nodeInfo","sizingStyle","name","calculateNodeStyling","minHeight","Number","maxHeight","singleRowHeight","overflowY","ResizableTextArea","raf","autoSize","textareaStyles","resizing","autosize","overflow","saveTextArea","TextArea","ActionMap","click","hover","Password","visible","action","iconProps","visibilityToggle","suffixIcon"],"mappings":"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","file":"static/js/4.4f1fc7d7.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.warning = warning;\nexports.note = note;\nexports.resetWarned = resetWarned;\nexports.call = call;\nexports.warningOnce = warningOnce;\nexports.noteOnce = noteOnce;\nexports.default = void 0;\n\n/* eslint-disable no-console */\nvar warned = {};\n\nfunction warning(valid, message) {\n  // Support uglify\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    console.error(\"Warning: \".concat(message));\n  }\n}\n\nfunction note(valid, message) {\n  // Support uglify\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    console.warn(\"Note: \".concat(message));\n  }\n}\n\nfunction resetWarned() {\n  warned = {};\n}\n\nfunction call(method, valid, message) {\n  if (!valid && !warned[message]) {\n    method(false, message);\n    warned[message] = true;\n  }\n}\n\nfunction warningOnce(valid, message) {\n  call(warning, valid, message);\n}\n\nfunction noteOnce(valid, message) {\n  call(note, valid, message);\n}\n\nvar _default = warningOnce;\n/* eslint-enable */\n\nexports.default = _default;","'use strict'\n\nmodule.exports = isMobile\nmodule.exports.isMobile = isMobile\nmodule.exports.default = isMobile\n\nvar mobileRE = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series[46]0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i\n\nvar tabletRE = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series[46]0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino|android|ipad|playbook|silk/i\n\nfunction isMobile (opts) {\n  if (!opts) opts = {}\n  var ua = opts.ua\n  if (!ua && typeof navigator !== 'undefined') ua = navigator.userAgent\n  if (ua && ua.headers && typeof ua.headers['user-agent'] === 'string') {\n    ua = ua.headers['user-agent']\n  }\n  if (typeof ua !== 'string') return false\n\n  return opts.tablet ? tabletRE.test(ua) : mobileRE.test(ua)\n}\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar findDOMNode_1 = __importDefault(require(\"rc-util/lib/Dom/findDOMNode\"));\n\nvar toArray_1 = __importDefault(require(\"rc-util/lib/Children/toArray\"));\n\nvar warning_1 = __importDefault(require(\"rc-util/lib/warning\"));\n\nvar ref_1 = require(\"rc-util/lib/ref\");\n\nvar resize_observer_polyfill_1 = __importDefault(require(\"resize-observer-polyfill\"));\n\nvar util_1 = require(\"./util\");\n\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    _classCallCheck(this, ReactResizeObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactResizeObserver).apply(this, arguments));\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          onResize(size);\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = findDOMNode_1.default(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new resize_observer_polyfill_1.default(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray_1.default(children);\n\n      if (childNodes.length > 1) {\n        warning_1.default(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning_1.default(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if (React.isValidElement(childNode) && util_1.supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = React.cloneElement(childNode, {\n          ref: ref_1.composeRef(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (!React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n\n        return React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(React.Component);\n\nReactResizeObserver.displayName = 'ResizeObserver';\nexports.default = ReactResizeObserver;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findDOMNode;\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Return if a node is a DOM node. Else will return by `findDOMNode`\n */\nfunction findDOMNode(node) {\n  if (node instanceof HTMLElement) {\n    return node;\n  }\n\n  return _reactDom.default.findDOMNode(node);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fillRef = fillRef;\nexports.composeRef = composeRef;\nexports.supportRef = supportRef;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction fillRef(ref, node) {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else if (_typeof(ref) === 'object' && ref && 'current' in ref) {\n    ref.current = node;\n  }\n}\n/**\n * Merge refs into one ref function to support ref passing.\n */\n\n\nfunction composeRef() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      fillRef(ref, node);\n    });\n  };\n}\n\nfunction supportRef(nodeOrComponent) {\n  // Function component node\n  if (nodeOrComponent.type && nodeOrComponent.type.prototype && !nodeOrComponent.type.prototype.render) {\n    return false;\n  } // Class component\n\n\n  if (typeof nodeOrComponent === 'function' && nodeOrComponent.prototype && !nodeOrComponent.prototype.render) {\n    return false;\n  }\n\n  return true;\n}\n/* eslint-enable */","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction supportRef(node) {\n  // Function component\n  if (node.type && node.type.prototype && !node.type.prototype.render) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.supportRef = supportRef;","import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { tuple } from '../_util/type';\nimport { getInputClassName } from './Input';\nconst ClearableInputType = tuple('text', 'input');\nexport function hasPrefixSuffix(props) {\n    return !!(props.prefix || props.suffix || props.allowClear);\n}\nclass ClearableLabeledInput extends React.Component {\n    renderClearIcon(prefixCls) {\n        const { allowClear, value, disabled, inputType, handleReset } = this.props;\n        if (!allowClear || disabled || value === undefined || value === null || value === '') {\n            return null;\n        }\n        const className = inputType === ClearableInputType[0]\n            ? `${prefixCls}-textarea-clear-icon`\n            : `${prefixCls}-clear-icon`;\n        return (<Icon type=\"close-circle\" theme=\"filled\" onClick={handleReset} className={className} role=\"button\"/>);\n    }\n    renderSuffix(prefixCls) {\n        const { suffix, allowClear } = this.props;\n        if (suffix || allowClear) {\n            return (<span className={`${prefixCls}-suffix`}>\n          {this.renderClearIcon(prefixCls)}\n          {suffix}\n        </span>);\n        }\n        return null;\n    }\n    renderLabeledIcon(prefixCls, element) {\n        const props = this.props;\n        const suffix = this.renderSuffix(prefixCls);\n        if (!hasPrefixSuffix(props)) {\n            return React.cloneElement(element, {\n                value: props.value,\n            });\n        }\n        const prefix = props.prefix ? (<span className={`${prefixCls}-prefix`}>{props.prefix}</span>) : null;\n        const affixWrapperCls = classNames(props.className, `${prefixCls}-affix-wrapper`, {\n            [`${prefixCls}-affix-wrapper-sm`]: props.size === 'small',\n            [`${prefixCls}-affix-wrapper-lg`]: props.size === 'large',\n            [`${prefixCls}-affix-wrapper-input-with-clear-btn`]: props.suffix && props.allowClear && this.props.value,\n        });\n        return (<span className={affixWrapperCls} style={props.style}>\n        {prefix}\n        {React.cloneElement(element, {\n            style: null,\n            value: props.value,\n            className: getInputClassName(prefixCls, props.size, props.disabled),\n        })}\n        {suffix}\n      </span>);\n    }\n    renderInputWithLabel(prefixCls, labeledElement) {\n        const { addonBefore, addonAfter, style, size, className } = this.props;\n        // Not wrap when there is not addons\n        if (!addonBefore && !addonAfter) {\n            return labeledElement;\n        }\n        const wrapperClassName = `${prefixCls}-group`;\n        const addonClassName = `${wrapperClassName}-addon`;\n        const addonBeforeNode = addonBefore ? (<span className={addonClassName}>{addonBefore}</span>) : null;\n        const addonAfterNode = addonAfter ? <span className={addonClassName}>{addonAfter}</span> : null;\n        const mergedWrapperClassName = classNames(`${prefixCls}-wrapper`, {\n            [wrapperClassName]: addonBefore || addonAfter,\n        });\n        const mergedGroupClassName = classNames(className, `${prefixCls}-group-wrapper`, {\n            [`${prefixCls}-group-wrapper-sm`]: size === 'small',\n            [`${prefixCls}-group-wrapper-lg`]: size === 'large',\n        });\n        // Need another wrapper for changing display:table to display:inline-block\n        // and put style prop in wrapper\n        return (<span className={mergedGroupClassName} style={style}>\n        <span className={mergedWrapperClassName}>\n          {addonBeforeNode}\n          {React.cloneElement(labeledElement, { style: null })}\n          {addonAfterNode}\n        </span>\n      </span>);\n    }\n    renderTextAreaWithClearIcon(prefixCls, element) {\n        const { value, allowClear, className, style } = this.props;\n        if (!allowClear) {\n            return React.cloneElement(element, {\n                value,\n            });\n        }\n        const affixWrapperCls = classNames(className, `${prefixCls}-affix-wrapper`, `${prefixCls}-affix-wrapper-textarea-with-clear-btn`);\n        return (<span className={affixWrapperCls} style={style}>\n        {React.cloneElement(element, {\n            style: null,\n            value,\n        })}\n        {this.renderClearIcon(prefixCls)}\n      </span>);\n    }\n    renderClearableLabeledInput() {\n        const { prefixCls, inputType, element } = this.props;\n        if (inputType === ClearableInputType[0]) {\n            return this.renderTextAreaWithClearIcon(prefixCls, element);\n        }\n        return this.renderInputWithLabel(prefixCls, this.renderLabeledIcon(prefixCls, element));\n    }\n    render() {\n        return this.renderClearableLabeledInput();\n    }\n}\npolyfill(ClearableLabeledInput);\nexport default ClearableLabeledInput;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { tuple } from '../_util/type';\nimport ClearableLabeledInput, { hasPrefixSuffix } from './ClearableLabeledInput';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nexport const InputSizes = tuple('small', 'default', 'large');\nexport function fixControlledValue(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return '';\n    }\n    return value;\n}\nexport function resolveOnChange(target, e, onChange) {\n    if (onChange) {\n        let event = e;\n        if (e.type === 'click') {\n            // click clear icon\n            event = Object.create(e);\n            event.target = target;\n            event.currentTarget = target;\n            const originalInputValue = target.value;\n            // change target ref value cause e.target.value should be '' when clear input\n            target.value = '';\n            onChange(event);\n            // reset target ref value\n            target.value = originalInputValue;\n            return;\n        }\n        onChange(event);\n    }\n}\nexport function getInputClassName(prefixCls, size, disabled) {\n    return classNames(prefixCls, {\n        [`${prefixCls}-sm`]: size === 'small',\n        [`${prefixCls}-lg`]: size === 'large',\n        [`${prefixCls}-disabled`]: disabled,\n    });\n}\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveClearableInput = (input) => {\n            this.clearableInput = input;\n        };\n        this.saveInput = (input) => {\n            this.input = input;\n        };\n        this.handleReset = (e) => {\n            this.setValue('', () => {\n                this.focus();\n            });\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.renderInput = (prefixCls) => {\n            const { className, addonBefore, addonAfter, size, disabled } = this.props;\n            // Fix https://fb.me/react-unknown-prop\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'addonBefore',\n                'addonAfter',\n                'prefix',\n                'suffix',\n                'allowClear',\n                // Input elements must be either controlled or uncontrolled,\n                // specify either the value prop, or the defaultValue prop, but not both.\n                'defaultValue',\n                'size',\n                'inputType',\n            ]);\n            return (<input {...otherProps} onChange={this.handleChange} onKeyDown={this.handleKeyDown} className={classNames(getInputClassName(prefixCls, size, disabled), {\n                [className]: className && !addonBefore && !addonAfter,\n            })} ref={this.saveInput}/>);\n        };\n        this.handleChange = (e) => {\n            this.setValue(e.target.value);\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.renderComponent = ({ getPrefixCls }) => {\n            const { value } = this.state;\n            const { prefixCls: customizePrefixCls } = this.props;\n            const prefixCls = getPrefixCls('input', customizePrefixCls);\n            return (<ClearableLabeledInput {...this.props} prefixCls={prefixCls} inputType=\"input\" value={fixControlledValue(value)} element={this.renderInput(prefixCls)} handleReset={this.handleReset} ref={this.saveClearableInput}/>);\n        };\n        const value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        return null;\n    }\n    // Since polyfill `getSnapshotBeforeUpdate` need work with `componentDidUpdate`.\n    // We keep an empty function here.\n    componentDidUpdate() { }\n    getSnapshotBeforeUpdate(prevProps) {\n        if (hasPrefixSuffix(prevProps) !== hasPrefixSuffix(this.props)) {\n            warning(this.input !== document.activeElement, 'Input', `When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ`);\n        }\n        return null;\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    select() {\n        this.input.select();\n    }\n    setValue(value, callback) {\n        if (!('value' in this.props)) {\n            this.setState({ value }, callback);\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nInput.defaultProps = {\n    type: 'text',\n};\nInput.propTypes = {\n    type: PropTypes.string,\n    id: PropTypes.string,\n    size: PropTypes.oneOf(InputSizes),\n    maxLength: PropTypes.number,\n    disabled: PropTypes.bool,\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    className: PropTypes.string,\n    addonBefore: PropTypes.node,\n    addonAfter: PropTypes.node,\n    prefixCls: PropTypes.string,\n    onPressEnter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    prefix: PropTypes.node,\n    suffix: PropTypes.node,\n    allowClear: PropTypes.bool,\n};\npolyfill(Input);\nexport default Input;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst Group = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, className = '' } = props;\n    const prefixCls = getPrefixCls('input-group', customizePrefixCls);\n    const cls = classNames(prefixCls, {\n        [`${prefixCls}-lg`]: props.size === 'large',\n        [`${prefixCls}-sm`]: props.size === 'small',\n        [`${prefixCls}-compact`]: props.compact,\n    }, className);\n    return (<span className={cls} style={props.style} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} onFocus={props.onFocus} onBlur={props.onBlur}>\n          {props.children}\n        </span>);\n}}\n  </ConfigConsumer>);\nexport default Group;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isMobile } from 'is-mobile';\nimport Input from './Input';\nimport Icon from '../icon';\nimport Button from '../button';\nimport { ConfigConsumer } from '../config-provider';\nexport default class Search extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.saveInput = (node) => {\n            this.input = node;\n        };\n        this.onChange = (e) => {\n            const { onChange, onSearch } = this.props;\n            if (e && e.target && e.type === 'click' && onSearch) {\n                onSearch(e.target.value, e);\n            }\n            if (onChange) {\n                onChange(e);\n            }\n        };\n        this.onSearch = (e) => {\n            const { onSearch, loading, disabled } = this.props;\n            if (loading || disabled) {\n                return;\n            }\n            if (onSearch) {\n                onSearch(this.input.input.value, e);\n            }\n            if (!isMobile({ tablet: true })) {\n                this.input.focus();\n            }\n        };\n        this.renderLoading = (prefixCls) => {\n            const { enterButton, size } = this.props;\n            if (enterButton) {\n                return (<Button className={`${prefixCls}-button`} type=\"primary\" size={size} key=\"enterButton\">\n          <Icon type=\"loading\"/>\n        </Button>);\n            }\n            return <Icon className={`${prefixCls}-icon`} type=\"loading\" key=\"loadingIcon\"/>;\n        };\n        this.renderSuffix = (prefixCls) => {\n            const { suffix, enterButton, loading } = this.props;\n            if (loading && !enterButton) {\n                return [suffix, this.renderLoading(prefixCls)];\n            }\n            if (enterButton)\n                return suffix;\n            const icon = (<Icon className={`${prefixCls}-icon`} type=\"search\" key=\"searchIcon\" onClick={this.onSearch}/>);\n            if (suffix) {\n                return [\n                    React.isValidElement(suffix)\n                        ? React.cloneElement(suffix, {\n                            key: 'suffix',\n                        })\n                        : null,\n                    icon,\n                ];\n            }\n            return icon;\n        };\n        this.renderAddonAfter = (prefixCls) => {\n            const { enterButton, size, disabled, addonAfter, loading } = this.props;\n            const btnClassName = `${prefixCls}-button`;\n            if (loading && enterButton) {\n                return [this.renderLoading(prefixCls), addonAfter];\n            }\n            if (!enterButton)\n                return addonAfter;\n            let button;\n            const enterButtonAsElement = enterButton;\n            const isAntdButton = enterButtonAsElement.type &&\n                enterButtonAsElement.type.__ANT_BUTTON === true;\n            if (isAntdButton || enterButtonAsElement.type === 'button') {\n                button = React.cloneElement(enterButtonAsElement, Object.assign({ onClick: this.onSearch, key: 'enterButton' }, (isAntdButton\n                    ? {\n                        className: btnClassName,\n                        size,\n                    }\n                    : {})));\n            }\n            else {\n                button = (<Button className={btnClassName} type=\"primary\" size={size} disabled={disabled} key=\"enterButton\" onClick={this.onSearch}>\n          {enterButton === true ? <Icon type=\"search\"/> : enterButton}\n        </Button>);\n            }\n            if (addonAfter) {\n                return [\n                    button,\n                    React.isValidElement(addonAfter)\n                        ? React.cloneElement(addonAfter, {\n                            key: 'addonAfter',\n                        })\n                        : null,\n                ];\n            }\n            return button;\n        };\n        this.renderSearch = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, inputPrefixCls: customizeInputPrefixCls, size, enterButton, className } = _a, restProps = __rest(_a, [\"prefixCls\", \"inputPrefixCls\", \"size\", \"enterButton\", \"className\"]);\n            delete restProps.onSearch;\n            delete restProps.loading;\n            const prefixCls = getPrefixCls('input-search', customizePrefixCls);\n            const inputPrefixCls = getPrefixCls('input', customizeInputPrefixCls);\n            let inputClassName;\n            if (enterButton) {\n                inputClassName = classNames(prefixCls, className, {\n                    [`${prefixCls}-enter-button`]: !!enterButton,\n                    [`${prefixCls}-${size}`]: !!size,\n                });\n            }\n            else {\n                inputClassName = classNames(prefixCls, className);\n            }\n            return (<Input onPressEnter={this.onSearch} {...restProps} size={size} prefixCls={inputPrefixCls} addonAfter={this.renderAddonAfter(prefixCls)} suffix={this.renderSuffix(prefixCls)} onChange={this.onChange} ref={this.saveInput} className={inputClassName}/>);\n        };\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSearch}</ConfigConsumer>;\n    }\n}\nSearch.defaultProps = {\n    enterButton: false,\n};\n","// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nconst HIDDEN_TEXTAREA_STYLE = `\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n`;\nconst SIZING_STYLE = [\n    'letter-spacing',\n    'line-height',\n    'padding-top',\n    'padding-bottom',\n    'font-family',\n    'font-weight',\n    'font-size',\n    'font-variant',\n    'text-rendering',\n    'text-transform',\n    'width',\n    'text-indent',\n    'padding-left',\n    'padding-right',\n    'border-width',\n    'box-sizing',\n];\nconst computedStyleCache = {};\nlet hiddenTextarea;\nexport function calculateNodeStyling(node, useCache = false) {\n    const nodeRef = (node.getAttribute('id') ||\n        node.getAttribute('data-reactid') ||\n        node.getAttribute('name'));\n    if (useCache && computedStyleCache[nodeRef]) {\n        return computedStyleCache[nodeRef];\n    }\n    const style = window.getComputedStyle(node);\n    const boxSizing = style.getPropertyValue('box-sizing') ||\n        style.getPropertyValue('-moz-box-sizing') ||\n        style.getPropertyValue('-webkit-box-sizing');\n    const paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) +\n        parseFloat(style.getPropertyValue('padding-top'));\n    const borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) +\n        parseFloat(style.getPropertyValue('border-top-width'));\n    const sizingStyle = SIZING_STYLE.map(name => `${name}:${style.getPropertyValue(name)}`).join(';');\n    const nodeInfo = {\n        sizingStyle,\n        paddingSize,\n        borderSize,\n        boxSizing,\n    };\n    if (useCache && nodeRef) {\n        computedStyleCache[nodeRef] = nodeInfo;\n    }\n    return nodeInfo;\n}\nexport default function calculateNodeHeight(uiTextNode, useCache = false, minRows = null, maxRows = null) {\n    if (!hiddenTextarea) {\n        hiddenTextarea = document.createElement('textarea');\n        document.body.appendChild(hiddenTextarea);\n    }\n    // Fix wrap=\"off\" issue\n    // https://github.com/ant-design/ant-design/issues/6577\n    if (uiTextNode.getAttribute('wrap')) {\n        hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n    }\n    else {\n        hiddenTextarea.removeAttribute('wrap');\n    }\n    // Copy all CSS properties that have an impact on the height of the content in\n    // the textbox\n    const { paddingSize, borderSize, boxSizing, sizingStyle } = calculateNodeStyling(uiTextNode, useCache);\n    // Need to have the overflow attribute to hide the scrollbar otherwise\n    // text-lines will not calculated properly as the shadow will technically be\n    // narrower for content\n    hiddenTextarea.setAttribute('style', `${sizingStyle};${HIDDEN_TEXTAREA_STYLE}`);\n    hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n    let minHeight = Number.MIN_SAFE_INTEGER;\n    let maxHeight = Number.MAX_SAFE_INTEGER;\n    let height = hiddenTextarea.scrollHeight;\n    let overflowY;\n    if (boxSizing === 'border-box') {\n        // border-box: add border, since height = content + padding + border\n        height += borderSize;\n    }\n    else if (boxSizing === 'content-box') {\n        // remove padding, since height = content\n        height -= paddingSize;\n    }\n    if (minRows !== null || maxRows !== null) {\n        // measure height of a textarea with a single row\n        hiddenTextarea.value = ' ';\n        const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n        if (minRows !== null) {\n            minHeight = singleRowHeight * minRows;\n            if (boxSizing === 'border-box') {\n                minHeight = minHeight + paddingSize + borderSize;\n            }\n            height = Math.max(minHeight, height);\n        }\n        if (maxRows !== null) {\n            maxHeight = singleRowHeight * maxRows;\n            if (boxSizing === 'border-box') {\n                maxHeight = maxHeight + paddingSize + borderSize;\n            }\n            overflowY = height > maxHeight ? '' : 'hidden';\n            height = Math.min(maxHeight, height);\n        }\n    }\n    return { height, minHeight, maxHeight, overflowY };\n}\n","import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport raf from '../_util/raf';\nimport warning from '../_util/warning';\nclass ResizableTextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveTextArea = (textArea) => {\n            this.textArea = textArea;\n        };\n        this.resizeOnNextFrame = () => {\n            raf.cancel(this.nextFrameActionId);\n            this.nextFrameActionId = raf(this.resizeTextarea);\n        };\n        this.resizeTextarea = () => {\n            const autoSize = this.props.autoSize || this.props.autosize;\n            if (!autoSize || !this.textArea) {\n                return;\n            }\n            const { minRows, maxRows } = autoSize;\n            const textareaStyles = calculateNodeHeight(this.textArea, false, minRows, maxRows);\n            this.setState({ textareaStyles, resizing: true }, () => {\n                raf.cancel(this.resizeFrameId);\n                this.resizeFrameId = raf(() => {\n                    this.setState({ resizing: false });\n                });\n            });\n        };\n        this.renderTextArea = () => {\n            const { prefixCls, autoSize, autosize, className, disabled } = this.props;\n            const { textareaStyles, resizing } = this.state;\n            warning(autosize === undefined, 'Input.TextArea', 'autosize is deprecated, please use autoSize instead.');\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'autoSize',\n                'autosize',\n                'defaultValue',\n                'allowClear',\n            ]);\n            const cls = classNames(prefixCls, className, {\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Fix https://github.com/ant-design/ant-design/issues/6776\n            // Make sure it could be reset when using form.getFieldDecorator\n            if ('value' in otherProps) {\n                otherProps.value = otherProps.value || '';\n            }\n            const style = Object.assign(Object.assign(Object.assign({}, this.props.style), textareaStyles), (resizing ? { overflow: 'hidden' } : null));\n            return (<ResizeObserver onResize={this.resizeOnNextFrame} disabled={!(autoSize || autosize)}>\n        <textarea {...otherProps} className={cls} style={style} ref={this.saveTextArea}/>\n      </ResizeObserver>);\n        };\n        this.state = {\n            textareaStyles: {},\n            resizing: false,\n        };\n    }\n    componentDidMount() {\n        this.resizeTextarea();\n    }\n    componentDidUpdate(prevProps) {\n        // Re-render with the new content then recalculate the height as required.\n        if (prevProps.value !== this.props.value) {\n            this.resizeTextarea();\n        }\n    }\n    componentWillUnmount() {\n        raf.cancel(this.nextFrameActionId);\n        raf.cancel(this.resizeFrameId);\n    }\n    render() {\n        return this.renderTextArea();\n    }\n}\npolyfill(ResizableTextArea);\nexport default ResizableTextArea;\n","import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ClearableLabeledInput from './ClearableLabeledInput';\nimport ResizableTextArea from './ResizableTextArea';\nimport { ConfigConsumer } from '../config-provider';\nimport { fixControlledValue, resolveOnChange } from './Input';\nclass TextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveTextArea = (resizableTextArea) => {\n            this.resizableTextArea = resizableTextArea;\n        };\n        this.saveClearableInput = (clearableInput) => {\n            this.clearableInput = clearableInput;\n        };\n        this.handleChange = (e) => {\n            this.setValue(e.target.value, () => {\n                this.resizableTextArea.resizeTextarea();\n            });\n            resolveOnChange(this.resizableTextArea.textArea, e, this.props.onChange);\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.handleReset = (e) => {\n            this.setValue('', () => {\n                this.resizableTextArea.renderTextArea();\n                this.focus();\n            });\n            resolveOnChange(this.resizableTextArea.textArea, e, this.props.onChange);\n        };\n        this.renderTextArea = (prefixCls) => {\n            return (<ResizableTextArea {...this.props} prefixCls={prefixCls} onKeyDown={this.handleKeyDown} onChange={this.handleChange} ref={this.saveTextArea}/>);\n        };\n        this.renderComponent = ({ getPrefixCls }) => {\n            const { value } = this.state;\n            const { prefixCls: customizePrefixCls } = this.props;\n            const prefixCls = getPrefixCls('input', customizePrefixCls);\n            return (<ClearableLabeledInput {...this.props} prefixCls={prefixCls} inputType=\"text\" value={fixControlledValue(value)} element={this.renderTextArea(prefixCls)} handleReset={this.handleReset} ref={this.saveClearableInput}/>);\n        };\n        const value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        return null;\n    }\n    setValue(value, callback) {\n        if (!('value' in this.props)) {\n            this.setState({ value }, callback);\n        }\n    }\n    focus() {\n        this.resizableTextArea.textArea.focus();\n    }\n    blur() {\n        this.resizableTextArea.textArea.blur();\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\npolyfill(TextArea);\nexport default TextArea;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Input from './Input';\nimport Icon from '../icon';\nconst ActionMap = {\n    click: 'onClick',\n    hover: 'onMouseOver',\n};\nexport default class Password extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            visible: false,\n        };\n        this.onChange = () => {\n            const { disabled } = this.props;\n            if (disabled) {\n                return;\n            }\n            this.setState(({ visible }) => ({ visible: !visible }));\n        };\n        this.saveInput = (instance) => {\n            if (instance && instance.input) {\n                this.input = instance.input;\n            }\n        };\n    }\n    getIcon() {\n        const { prefixCls, action } = this.props;\n        const iconTrigger = ActionMap[action] || '';\n        const iconProps = {\n            [iconTrigger]: this.onChange,\n            className: `${prefixCls}-icon`,\n            type: this.state.visible ? 'eye' : 'eye-invisible',\n            key: 'passwordIcon',\n            onMouseDown: (e) => {\n                // Prevent focused state lost\n                // https://github.com/ant-design/ant-design/issues/15173\n                e.preventDefault();\n            },\n        };\n        return <Icon {...iconProps}/>;\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    select() {\n        this.input.select();\n    }\n    render() {\n        const _a = this.props, { className, prefixCls, inputPrefixCls, size, visibilityToggle } = _a, restProps = __rest(_a, [\"className\", \"prefixCls\", \"inputPrefixCls\", \"size\", \"visibilityToggle\"]);\n        const suffixIcon = visibilityToggle && this.getIcon();\n        const inputClassName = classNames(prefixCls, className, {\n            [`${prefixCls}-${size}`]: !!size,\n        });\n        return (<Input {...omit(restProps, ['suffix'])} type={this.state.visible ? 'text' : 'password'} size={size} className={inputClassName} prefixCls={inputPrefixCls} suffix={suffixIcon} ref={this.saveInput}/>);\n    }\n}\nPassword.defaultProps = {\n    inputPrefixCls: 'ant-input',\n    prefixCls: 'ant-input-password',\n    action: 'click',\n    visibilityToggle: true,\n};\n","import Input from './Input';\nimport Group from './Group';\nimport Search from './Search';\nimport TextArea from './TextArea';\nimport Password from './Password';\nInput.Group = Group;\nInput.Search = Search;\nInput.TextArea = TextArea;\nInput.Password = Password;\nexport default Input;\n"],"sourceRoot":""}